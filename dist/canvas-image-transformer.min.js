const CanvasImageTransformer=function(){const a=function(c,d,e,b){return(c<<24)+(d<<16)+(e<<8)+b},b=function(a,b,c,d){const e=4*(c+d*b);return[a[e]/255,a[e+1]/255,a[e+2]/255,a[e+3]/255]},c=function(a,b){this.getMatrixArray=function(){return a},this.getWidth=function(){return b}};return{colorToRGBA:function(a){return[255&a>>24,255&a>>16,255&a>>8,255&a]},rgbaToColor:a,createKernel:function(a,b){return new c(a,b)},imageToCanvas:function(a,b,c,d){d&&(a.width>a.height?c*=a.height/a.width:a.height>a.width&&(b*=a.width/a.height));const e=document.createElement("canvas");e.width=b,e.height=c;const f=e.getContext("2d");return f.drawImage(a,0,0,b,c),e},videoFrameToCanvas:function(a,b,c,d){d&&(a.videoWidth>a.videoHeight?c*=a.videoHeight/a.videoWidth:a.height>a.videoWidth&&(b*=a.videoWidth/a.videoHeight));const e=document.createElement("canvas");e.width=b,e.height=c;const f=e.getContext("2d");return f.drawImage(a,0,0,b,c),e},_setAdditionalShaderVars:function(a,b,c){for(let d=0;d<c.length;d++){const e=c[d];if("1f"===e.type)a.uniform1f(a.getUniformLocation(b,e.name),e.x);else if("1i"===e.type)a.uniform1i(a.getUniformLocation(b,e.name),e.x);else if("2f"===e.type)a.uniform2f(a.getUniformLocation(b,e.name),e.x,e.y);else if("2i"===e.type)a.uniform2i(a.getUniformLocation(b,e.name),e.x,e.y);else if("3f"===e.type)a.uniform3f(a.getUniformLocation(b,e.name),e.x,e.y,e.z);else if("3i"===e.type)a.uniform3i(a.getUniformLocation(b,e.name),e.x,e.y,e.z);else if("4f"===e.type)a.uniform4f(a.getUniformLocation(b,e.name),e.x,e.y,e.z,e.w);else if("4i"===e.type)a.uniform4i(a.getUniformLocation(b,e.name),e.x,e.y,e.z,e.w);else throw"Invalid shader var specified"}},_createShaderProgram:function(a,b){const c=a.createProgram(),d=a.createShader(a.VERTEX_SHADER);a.shaderSource(d,`
                attribute vec3 aVertexPosition;
                attribute vec2 aTextureCoord;
                uniform mat4 uMVMatrix;
                uniform mat4 uPMatrix;
                varying vec2 vTextureCoord;
                
                void main(void) {
                    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
                    vTextureCoord = aTextureCoord;
                }            
            `),a.compileShader(d);const e=a.createShader(a.FRAGMENT_SHADER);return a.shaderSource(e,b),a.compileShader(e),a.attachShader(c,d),a.attachShader(c,e),a.linkProgram(c),c.vertexPositionAttribute=a.getAttribLocation(c,"aVertexPosition"),c.pMatrixUniform=a.getUniformLocation(c,"uPMatrix"),c.mvMatrixUniform=a.getUniformLocation(c,"uMVMatrix"),c.textureCoordAttribute=a.getAttribLocation(c,"aTextureCoord"),c},_createRectangleGLModel:function(a){const b={};return b.verts=[-1,1,0,-1,-1,0,1,-1,0,1,1,0],b.normals=[],b.indices=[0,1,3,2],b.texcoords=[0,0,0,1,1,1,1,0],b.vertexBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,b.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,new Float32Array(b.verts),a.STATIC_DRAW),b.vertexBuffer.itemSize=3,b.vertexBuffer.numItems=b.verts.length/3,b.indexBuffer=a.createBuffer(),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,b.indexBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,new Uint16Array(b.indices),a.STATIC_DRAW),b.indexBuffer.itemSize=1,b.indexBuffer.numItems=b.indices.length,b.texcoordBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,b.texcoordBuffer),a.bufferData(a.ARRAY_BUFFER,new Float32Array(b.texcoords),a.STATIC_DRAW),b.texcoordBuffer.itemSize=2,b.texcoordBuffer.numItems=b.texcoords.length/2,b},applyGLSLFragmentShader:function(a,b,c){const d=document.createElement("canvas");d.width=a.width,d.height=a.height;let e=d.getContext("webgl2");if(e||(e=d.getContext("webgl")),!e)throw"Browser does not support WebGL";e.viewport(0,0,a.width,a.height),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT);const f=this._createRectangleGLModel(e),g=new Float32Array([1,0,0,0,0,1,0,0,0,0,.019980020821094513,0,-0,-0,-.9980019927024841,1]),h=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,-0,-0,-0,1]),i=this._createShaderProgram(e,b);e.enableVertexAttribArray(i.vertexPositionAttribute),e.enableVertexAttribArray(i.textureCoordAttribute);const j=e.createTexture();e.useProgram(i),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,j),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.uniform1i(i.samplerUniform,0),e.bindBuffer(e.ARRAY_BUFFER,f.vertexBuffer),e.vertexAttribPointer(i.vertexPositionAttribute,f.vertexBuffer.itemSize,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,f.texcoordBuffer),e.vertexAttribPointer(i.textureCoordAttribute,f.texcoordBuffer.itemSize,e.FLOAT,!1,0,0),e.uniformMatrix4fv(i.pMatrixUniform,!1,g),e.uniformMatrix4fv(i.mvMatrixUniform,!1,h),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,f.indexBuffer),e.uniform1f(e.getUniformLocation(i,"uSceneWidth"),e.viewportWidth),e.uniform1f(e.getUniformLocation(i,"uSceneHeight"),e.viewportHeight),e.uniform1i(e.getUniformLocation(i,"uSampler"),0),this._setAdditionalShaderVars(e,i,c),e.drawElements(e.TRIANGLE_STRIP,f.indexBuffer.numItems,e.UNSIGNED_SHORT,0);const k=a.getContext("2d");return k.drawImage(d,0,0,a.width,a.height),a},genGLSLFragmentShaderAnimation:function(a,b,c){const d=document.createElement("canvas");d.width=a.width,d.height=a.height;let e=d.getContext("webgl2");if(e||(e=d.getContext("webgl")),!e)throw"Browser does not support WebGL";e.viewport(0,0,a.width,a.height),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT);const f=this._createRectangleGLModel(e),g=new Float32Array([1,0,0,0,0,1,0,0,0,0,.019980020821094513,0,-0,-0,-.9980019927024841,1]),h=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,-0,-0,-0,1]),i=this._createShaderProgram(e,b);e.enableVertexAttribArray(i.vertexPositionAttribute),e.enableVertexAttribArray(i.textureCoordAttribute);const j=e.createTexture();e.useProgram(i),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,j),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.uniform1i(i.samplerUniform,0),e.bindBuffer(e.ARRAY_BUFFER,f.vertexBuffer),e.vertexAttribPointer(i.vertexPositionAttribute,f.vertexBuffer.itemSize,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,f.texcoordBuffer),e.vertexAttribPointer(i.textureCoordAttribute,f.texcoordBuffer.itemSize,e.FLOAT,!1,0,0),e.uniformMatrix4fv(i.pMatrixUniform,!1,g),e.uniformMatrix4fv(i.mvMatrixUniform,!1,h),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,f.indexBuffer),e.uniform1f(e.getUniformLocation(i,"uSceneWidth"),e.viewportWidth),e.uniform1f(e.getUniformLocation(i,"uSceneHeight"),e.viewportHeight),e.uniform1i(e.getUniformLocation(i,"uSampler"),0);const k=function(a){CanvasImageTransformer._setAdditionalShaderVars(e,i,c(a)),e.drawElements(e.TRIANGLE_STRIP,f.indexBuffer.numItems,e.UNSIGNED_SHORT,0),requestAnimationFrame(k)};return requestAnimationFrame(k),d},applyKernel:function(a,c){const d=a.getContext("2d"),e=d.getImageData(0,0,a.width,a.height).data,f=new Uint8ClampedArray(4*(a.width*a.height)),g=c.getWidth(),h=c.getMatrixArray();for(let d=0;d<a.height;d++)for(let c,i=0;i<a.width;i++){c=[0,0,0,0];for(let f=0;f<g;f++)for(let j=0;j<g;j++){const k=j+f*g,l=j-(g-1)/2,m=f-(g-1)/2;let n=i+l,o=d+m;if(0>n||0>o||n>=a.width||o>=a.height)continue;const p=b(e,a.width,n,o);c[0]+=h[k]*p[0],c[1]+=h[k]*p[1],c[2]+=h[k]*p[2],0===l&&0===m&&(c[3]=p[3])}const j=4*(i+d*a.width);f[j+0]=parseInt(255*c[0]),f[j+1]=parseInt(255*c[1]),f[j+2]=parseInt(255*c[2]),f[j+3]=parseInt(255*c[3])}return d.putImageData(new ImageData(f,a.width,a.height),0,0),a},toGrayscale:function(a){for(var b,c=a.getContext("2d"),d=c.getImageData(0,0,a.width,a.height),e=0;e<d.data.length;e+=4)b=parseInt(255*(.2126*(d.data[e]/255)+.7152*(d.data[e+1]/255)+.0722*(d.data[e+2]/255))),d.data[e]=b,d.data[e+1]=b,d.data[e+2]=b;return c.putImageData(d,0,0),a},toBlackAndWhite:function(a){for(var b,c=a.getContext("2d"),d=c.getImageData(0,0,a.width,a.height),e=0;e<d.data.length;e+=4)b=.2126*(d.data[e]/255)+.7152*(d.data[e+1]/255)+.0722*(d.data[e+2]/255),.5>b?(d.data[e]=0,d.data[e+1]=0,d.data[e+2]=0,d.data[e+3]=255):(d.data[e]=255,d.data[e+1]=255,d.data[e+2]=255,d.data[e+3]=255);return c.putImageData(d,0,0),a},computeColorFrequencyMap:function(b){for(var c,d=new Map,e=b.getContext("2d"),f=e.getImageData(0,0,b.width,b.height),g=0;g<f.data.length;g+=4)c=a(f.data[g],f.data[g+1],f.data[g+2],f.data[g+3]),d.has(c)?d.set(c,d.get(c)+1):d.set(c,1);return d}}}();"undefined"!=typeof module&&module.exports&&(module.exports=CanvasImageTransformer);